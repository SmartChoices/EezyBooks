; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
; if you have any doubt you can reach me at  writeus@rocketmail.com

[Setup]
AppName=your app name
AppVerName=your app name 1.0
AppPublisher=your app name,  Inc.
AppPublisherURL=http://www.your app name.com/
AppSupportURL=http://www.your app name.com/
AppUpdatesURL=http://www.your app name.com/
DefaultDirName={pf}\your app name
DefaultGroupName=your app name
OutputBaseFilename=your app name 1.0
SetupIconFile=C:\Documents and Settings\yourname\Desktop\your app name.ico
Compression=lzma
SolidCompression=yes




[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]

; Path of your Installation files

; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Code]
var
	dotnetRedistPath: string;
	downloadNeeded: boolean;
	dotNetNeeded: boolean;
	memoDependenciesNeeded: string;
	Version: TWindowsVersion;
	oldVersion: String;
  uninstaller: String;
  ErrorCode: Integer;

procedure isxdl_AddFile(URL, Filename: PChar);
external 'isxdl_AddFile@files:isxdl.dll stdcall';
function isxdl_DownloadFiles(hWnd: Integer): Integer;
external 'isxdl_DownloadFiles@files:isxdl.dll stdcall';
function isxdl_SetOption(Option, Value: PChar): Integer;
external 'isxdl_SetOption@files:isxdl.dll stdcall';


// Can change this link to remoba instead of direct link to avoid dead links from MS
const
	dotnetRedistURL = 'http://download.microsoft.com/download/5/6/7/567758a3-759e-473e-bf8f-52154438565a/dotnetfx.exe';

//*********************************************************************************
// This is where all starts.
//*********************************************************************************
function InitializeSetup(): Boolean;

begin

	Result := true;
	dotNetNeeded := false;
	GetWindowsVersionEx(Version);
	
 //*****************************************************************************************
 // Check whether application  already  installed by reading app id in registry
  //****************************************************************************************
	
	if RegKeyExists(HKEY_LOCAL_MACHINE,  'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\your app name_is1') then
  begin
   if MsgBox('Application has detected that syncclient is already installed on your computer. Do you wish to Uninstall your previous setup and continue with fresh installation?',

           mbConfirmation, MB_YESNO) = IDNO then

         begin

           Result := False;

         end

         else

         begin

             RegQueryStringValue(HKEY_LOCAL_MACHINE,

               'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\your app name_is1',

              'UninstallString', uninstaller);

             //ShellExec('runas', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
             //use above statement if extra level security is required usually it is not req
             ShellExec('open', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
             
             if RegKeyExists(HKEY_LOCAL_MACHINE,  'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\your app name_is1') then
             begin
              Result := false;
             end
             else
             begin
             Result := true;
             end

         end;

       end
  
  //************************************************************************************
	// Check for the existance of .NET 2.0  on client machine before installing sync app
	//************************************************************************************
    if (not RegKeyExists(HKLM, 'Software\Microsoft\.NETFramework\policy\v2.0')) then
		begin
			dotNetNeeded := true;
				

			if (not IsAdminLoggedOn()) then
				begin
					MsgBox('Application needs the Microsoft .NET Framework 2.0 to be installed by an Administrator', mbInformation, MB_OK);
					Result := false;
				end
			else
				begin
					memoDependenciesNeeded := memoDependenciesNeeded + '      .NET Framework 2.0' #13;
					dotnetRedistPath := ExpandConstant('{src}\dotnetfx.exe');
					if not FileExists(dotnetRedistPath) then
						begin
							dotnetRedistPath := ExpandConstant('{tmp}\dotnetfx.exe');
							if not FileExists(dotnetRedistPath) then
								begin
									isxdl_AddFile(dotnetRedistURL, dotnetRedistPath);
									downloadNeeded := true;
								end
						end

					SetIniString('install', 'dotnetRedist', dotnetRedistPath, ExpandConstant('{tmp}\dep.ini'));
				end
		end;

end;

function NextButtonClick(CurPage: Integer): Boolean;

var
  hWnd: Integer;
  ResultCode: Integer;
  ResultXP: boolean;
  Result2003: boolean;

begin

  Result := true;
  ResultXP := true;
  Result2003 := true;

  //*********************************************************************************
  // Only run this at the "Ready To Install" wizard page.
  //*********************************************************************************
  if CurPage = wpReady then
	begin

		hWnd := StrToInt(ExpandConstant('{wizardhwnd}'));

		// don't try to init isxdl if it's not needed because it will error on < ie 3

		//********************************************************************************************************
		// Download the .NET 2.0 redistribution file. Can change the MS link to application development site to avoid dead link
		//*********************************************************************************************************
		if downloadNeeded and (dotNetNeeded = true) then
			begin
				isxdl_SetOption('label', 'Downloading Microsoft .NET Framework 2.0');
				isxdl_SetOption('description', 'This app needs to install the Microsoft .NET Framework 2.0. Please wait while Setup is downloading extra files to your computer.');
				if isxdl_DownloadFiles(hWnd) = 0 then Result := false;
			end;

		//***********************************************************************************
		// Run the install file for .NET Framework 2.0. This is usually dotnetfx.exe from MS
		//***********************************************************************************
        	if (dotNetNeeded = true) then
			begin

				if Exec(ExpandConstant(dotnetRedistPath), '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
					begin

						// handle success if necessary; ResultCode contains the exit code
						if not (ResultCode = 0) then
							begin

								Result := false;

							end
					end
					else
						begin

							// handle failure if necessary; ResultCode contains the error code
							Result := false;

						end
			end;

	end;

end;

//*********************************************************************************
// Updates the memo box shown right before the install actuall starts.
//*********************************************************************************
function UpdateReadyMemo(Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo, MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo: String): String;
var
  s: string;

begin

  if memoDependenciesNeeded <> '' then s := s + 'Dependencies that will be automatically downloaded And installed:' + NewLine + memoDependenciesNeeded + NewLine;
  s := s + MemoDirInfo + NewLine + NewLine;

  Result := s

end;

[Registry]

; Tuck Your Registry Details


[Icons]

; Tuck your Icon Path and Details

[Run]
Filename: "{app}\your app name.exe"; Description: "{cm:LaunchProgram,your app name}"; Flags: nowait postinstall skipifsilent


